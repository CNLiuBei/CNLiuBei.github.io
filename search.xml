<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2024/08/20/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Hexo+GitHub搭建步骤</title>
    <url>/2023/08/25/Hexo+GitHub%E6%90%AD%E5%BB%BA%E6%AD%A5%E9%AA%A4/</url>
    <content><![CDATA[<h1 id="Hexo-GitHub搭建步骤"><a href="#Hexo-GitHub搭建步骤" class="headerlink" title="Hexo+GitHub搭建步骤"></a>Hexo+GitHub搭建步骤</h1><h2 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h2><p>在最最开始，肯定要准备一个属于自己的GitHub账号。因篇幅有限，这里就不再赘述如何注册账号了，如果你还没有GitHub账号，可以自行搜索如何注册。不过记得要使用邮箱注册。</p>
<h3 id="1-安装git和node-js"><a href="#1-安装git和node-js" class="headerlink" title="1. 安装git和node.js"></a>1. 安装git和node.js</h3><p>要使用GitHub和Hexo，首先我们需要在本地安装git和node.js，因为Hexo基于node.js，再生成一个ssh密钥用于连接GitHub仓库以及本地文件夹。</p>
<blockquote>
<p>git下载链接：Git - Downloading Packag</p>
<p>node.js下载链接：Download | Node.js</p>
</blockquote>
<p>安装时可以直接一路点下一步，按默认设置安装即可。如果想搞清楚细节，可以看Git详细安装教程。</p>
<p>想要验证安装是否成功，可以win+r输入cmd进入终端，输入node -v、npm -v和git –version，如果出现版本号说明安装成功。在文件资源管理器中右键，出现Open Git Bash here和Open Git GUI here。</p>
<h3 id="2-连接GitHub和本地"><a href="#2-连接GitHub和本地" class="headerlink" title="2. 连接GitHub和本地"></a>2. 连接GitHub和本地</h3><p>在文件资源管理器中右键 - Open Git Bash here，打开git终端，输入以下两条命令，设置用户名和邮箱：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name &quot;GitHub用户名&quot;   </span><br><span class="line">$ git config --global user.email &quot;GitHub邮箱&quot;</span><br></pre></td></tr></table></figure>

<p>创建ssh密钥文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;GitHub邮箱&quot;</span><br></pre></td></tr></table></figure>

<p>一路回车即可。</p>
<p>最后返回密钥结果和图片说明创建完成。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/c/Users/Jingrong/.ssh/id_rsa):</span><br><span class="line">Created directory &#x27;/c/Users/Jingrong/.ssh&#x27;.</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved in /c/Users/Jingrong/.ssh/id_rsa</span><br><span class="line">Your public key has been saved in /c/Users/Jingrong/.ssh/id_rsa.pub</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:xxxx</span><br><span class="line">The key&#x27;s randomart image is:</span><br><span class="line">+---[RSA 3072]----+</span><br><span class="line">|                 |</span><br><span class="line">|       .         |</span><br><span class="line">|        + * .. + |</span><br><span class="line">|       . + = .  o|</span><br><span class="line">|      . S   . . .|</span><br><span class="line">|     . .     . . |</span><br><span class="line">|  .   = .  ...o  |</span><br><span class="line">|   +.= o +.++o   |</span><br><span class="line">|                 |</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure>

<p>找到路径Your public key has been saved in &#x2F;c&#x2F;Users&#x2F;Jingrong&#x2F;.ssh&#x2F;id_rsa.pub，用记事本打开。ctrl+a将所有内容复制到剪切板。</p>
<p>登录GitHub，点击右上角自己的头像 - setting，找到SSH and GPG keys，点击add SSH key：</p>
<p><img src="https://pic4.zhimg.com/80/v2-419cb9c870e905c917a5cc6effd0119f_720w.webp"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<p>将剪贴板中复制的密钥粘贴过来：</p>
<p><img src="https://pic1.zhimg.com/80/v2-9ba9b999600e3734fcdd93327fa2ded8_720w.webp"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<p>检测是否连接成功：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ssh git@github.com</span><br></pre></td></tr></table></figure>

<p>如果出现Hi xxx! You’ve successfully authenticated…的提示，就说明连接成功。</p>
<h3 id="3-安装Hexo以及Fluid主题"><a href="#3-安装Hexo以及Fluid主题" class="headerlink" title="3.安装Hexo以及Fluid主题"></a>3.安装Hexo以及Fluid主题</h3><p>使用 npm 安装 Hexo：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>输入hexo -v即可查看是否安装成功。</p>
<p>新建一个hexo站点根目录，在站点右键 - Open Git Bash here，执行以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo init</span><br><span class="line"></span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>

<p>执行完成之后，指定文件夹的目录如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">├── _config.yml ---&gt; 网站配置信息</span><br><span class="line">├── package.json ---&gt; 应用程序的信息</span><br><span class="line">├── scaffolds ---&gt; 模板文件夹</span><br><span class="line">├── source ---&gt; 放置资源文件。</span><br><span class="line">| ├── _drafts</span><br><span class="line">| └── _posts ---&gt; .md文件</span><br><span class="line">└── themes</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 &#x2F; 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。来自<a href="https://link.zhihu.com/?target=https://hexo.io/zh-cn/docs/setup">Hexo官方文档</a></p>
</blockquote>
<p>完成后再执行以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line"></span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>

<p>访问<a href="http://localhost:4000/">http://localhost:4000</a>，即可浏览生成的hexo页面。</p>
<p>接下来就可以在<a href="https://link.zhihu.com/?target=https://hexo.io/themes/">Themes | Hexo</a>里开始挑选一个喜欢的主题啦！</p>
<p>以fluid主题为例，先找到fluid官方文档和GitHub仓库。</p>
<p>Hexo 5.0.0 版本以上，推荐通过 npm 直接安装，进入博客目录执行命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-theme-fluid</span><br></pre></td></tr></table></figure>

<p>然后在博客目录下创建 _config.fluid.yml，将主题的 _config.yml内容复制过去。</p>
<p>指定主题</p>
<p>如下修改 Hexo 博客目录中的 _config.yml：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">theme: fluid # 指定主题</span><br><span class="line"></span><br><span class="line">language: zh-CN # 指定语言，会影响主题显示的语言，按需修改</span><br></pre></td></tr></table></figure>

<p>创建「关于页」</p>
<p>首次使用主题的「关于页」需要手动创建：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure>

<p>创建成功后修改 &#x2F;source&#x2F;about&#x2F;index.md，添加 layout 属性。</p>
<p>修改后的文件示例如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"></span><br><span class="line">title: 标题</span><br><span class="line"></span><br><span class="line">layout: about</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">这里写关于页的正文，支持 Markdown, HTML</span><br></pre></td></tr></table></figure>

<p>主题配置</p>
<p>关于主题配置的详细步骤可以查看fluid的<a href="https://link.zhihu.com/?target=https://hexo.fluid-dev.com/docs/guide/">主题使用文档</a>。</p>
<hr>
<h2 id="编写文章"><a href="#编写文章" class="headerlink" title="编写文章"></a>编写文章</h2><p>使用hexo的好处就在于不需要自己手写html，而只需要写md文档。</p>
<p>在resource&#x2F;_post文件夹中新建md文档。</p>
<p>md文档的开头需要添加以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标题</span><br><span class="line">tags: [标签1,标签2]</span><br><span class="line">categories: [分类]</span><br><span class="line">index_img: 主页封面图的相对路径</span><br><span class="line">date: 2023-8-25 18:03:07</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>写好之后输入命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo g #将md编译成html保存到public文件夹中</span><br><span class="line">$ hexo s #开启本地服务器查看网站</span><br></pre></td></tr></table></figure>

<p>即可看到自己新添加的文章。</p>
<hr>
<h2 id="发布到GitHub-Pages"><a href="#发布到GitHub-Pages" class="headerlink" title="发布到GitHub Pages"></a>发布到GitHub Pages</h2><h3 id="创建GitHub仓库"><a href="#创建GitHub仓库" class="headerlink" title="创建GitHub仓库"></a>创建GitHub仓库</h3><p>点击右上角加号，选择new repository。</p>
<p><img src="https://pic3.zhimg.com/80/v2-b76865245927dd072cfe9bac40b109ca_720w.webp"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<p>仓库名称按照用户名.<a href="https://link.zhihu.com/?target=http://github.io">http:&#x2F;&#x2F;</a><a href="https://link.zhihu.com/?target=http://github.io">github.io</a>的格式填写。选择public，勾选add a README file。</p>
<p><img src="https://pic3.zhimg.com/80/v2-9fb66c5efd0f27f3ae526cc120cde2ea_720w.webp"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<p>最后点击创建仓库即可。</p>
<h3 id="配置-config-yml文档"><a href="#配置-config-yml文档" class="headerlink" title="配置_config.yml文档"></a>配置_config.yml文档</h3><p>打开hexo站点的根目录，找到_config.yml文件，使用记事本打开。文档的最后将</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: One-Command Deployment</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">type: &#x27;&#x27;</span><br></pre></td></tr></table></figure>

<p>修改为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: One-Command Deployment</span><br><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repository: [git@github.com](mailto:git@github.com):用户名/用户名.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure>

<p>保存。</p>
<p>到这里就可以进入git终端，输入命令hexo d将public文件夹提交到仓库中。不一会就能看见仓库中出现了一个新的master分支，里面有上传的public文件夹的内容。</p>
<h3 id="生成GitHub-Pages"><a href="#生成GitHub-Pages" class="headerlink" title="生成GitHub Pages"></a>生成GitHub Pages</h3><p>进入刚刚生成的仓库。</p>
<p><img src="https://pic4.zhimg.com/80/v2-f931ab78626a5fd6fd744f69bf6a9243_720w.webp"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<p>source选择Deploye from a branch，Branch选择master分支，选择好之后点save保存设置。稍等一分钟，就可以看到”Your site is alive at xxxx”的提示，点击visit就可以在自己的网站上看到刚刚配置好的博客了。</p>
<p><img src="https://pic3.zhimg.com/80/v2-d61c11ed0dcf045ab905c1e02038ed6e_720w.webp"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<p>附：</p>
<p>hexo常用命令如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">hexo d == hexo deploy #部署</span><br><span class="line"></span><br><span class="line">hexo server #Hexo会监视文件变动并自动更新，无须重启服务器</span><br><span class="line"></span><br><span class="line">hexo server -s #静态模式</span><br><span class="line"></span><br><span class="line">hexo server -p 5000 #更改端口</span><br><span class="line"></span><br><span class="line">hexo server -i 192.168.1.1 #自定义 IP</span><br><span class="line"></span><br><span class="line">hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="更改域名"><a href="#更改域名" class="headerlink" title="更改域名"></a>更改域名</h2><p>我的域名是在<a href="https://link.zhihu.com/?target=https://www.namesilo.com/">namesilo</a>上购买的，非常便宜（xyz后缀的一年17r）。</p>
<p>在主页搜索自己想要的域名，添加到购物车。</p>
<p><img src="https://pic1.zhimg.com/80/v2-c9638be71f06c4d8c9f376eb69ae97dc_720w.webp"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<p>点击checkout跳转到结算界面。可以选择添加1美元的优惠码。我买的时候不知道为什么没有用，这里就不再介绍。确认之后点checkout，之后选择支付宝扫码付款即可。</p>
<p><img src="https://pic1.zhimg.com/80/v2-7cd31b7f97baedd89a6e2a6583343cbc_720w.webp"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<p>这里着重介绍购买之后如何进行域名的更改。</p>
<p>这里是My Account界面，点击manage进入域名管理页。</p>
<p><img src="https://pic3.zhimg.com/80/v2-260484b1bd511745c4f5673f0b4ff386_720w.webp"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<p>找到刚刚购买的域名，点击蓝色地球图标。</p>
<p><img src="https://pic4.zhimg.com/80/v2-e219f9db3297a8638d8b65ab5cb3ece3_720w.webp"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<p>首先将默认的所有配置删除，再点击CNAME添加一条配置。TTL默认改为3600即可。</p>
<p><img src="https://pic1.zhimg.com/80/v2-d859c192408d1c896d7778be4c0ff04c_720w.webp"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<p>还需要添加4条A记录，指向以下4个ip地址：</p>
<p>185.199.108.153</p>
<p>185.199.109.153</p>
<p>185.199.110.153</p>
<p>185.199.111.153</p>
<p>回到GitHub，将购买的域名也添加到GitHub Pages的设置上。</p>
<p><img src="https://pic1.zhimg.com/80/v2-103e81de23148a88ad0d82b75baba858_720w.webp"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<p>等待3-4个小时，就可以在全球使用这个域名访问你的GitHub Pages博客啦！</p>
<hr>
<h2 id="常见问题解决方法"><a href="#常见问题解决方法" class="headerlink" title="常见问题解决方法"></a>常见问题解决方法</h2><h3 id="重装系统之后，原本的环境都无法找回"><a href="#重装系统之后，原本的环境都无法找回" class="headerlink" title="重装系统之后，原本的环境都无法找回"></a>重装系统之后，原本的环境都无法找回</h3><p>复制好原本的文章，重新完成markdown格式的文档。重新安装git和node.js，生成ssh密钥，建立连接后重新建立hexo站点并上传到原来仓库。原本仓库的master分支里内容可以删除掉，防止新旧主题冲突。</p>
<h3 id="hexo-d时报错"><a href="#hexo-d时报错" class="headerlink" title="hexo d时报错"></a>hexo d时报错</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh: Could not resolve hostname github.com: Name or service not known</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line">​</span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br><span class="line">FATAL Something&#x27;s wrong. Maybe you can find the solution here: Page Not Found</span><br><span class="line">ocs/troubleshooting.html</span><br><span class="line">Error: Spawn failed</span><br><span class="line">    at ChildProcess.&lt;anonymous&gt; (E:\MyBlog\node_modules\hexo-util\lib\spawn.js:5</span><br><span class="line">1:21)</span><br><span class="line">    at ChildProcess.emit (node:events:514:28)</span><br><span class="line">    at cp.emit (E:\MyBlog\node_modules\cross-spawn\lib\enoent.js:34:29)</span><br><span class="line">    at ChildProcess._handle.onexit (node:internal/child_process:291:12)</span><br></pre></td></tr></table></figure>

<p>报以上错误，一般是网络连接出现问题了，无法上传到github对应仓库，可以尝试检查网络设置，或者查看是否是域名绑定不对出现的问题。</p>
<h3 id="图片无法显示"><a href="#图片无法显示" class="headerlink" title="图片无法显示"></a>图片无法显示</h3><p>在写本文的过程中，我想插入一些图片，但是发现图片只能在typora上显示，hexo g后无法在网页上显示，遂去查看各种教程，发现大部分都是让下载一个插件，然而还是不成功，据说是因为hexo版本更新了但是插件还没有更新。</p>
<p>那么我只能开始自己找解决办法。</p>
<p>首先在hexo clean、hexo g之后找到public文件夹，找到md文档生成的html文件，查看显示图片的那一行源代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;&lt;img src=&quot;/1.jpg&quot; srcset=&quot;/img/loading.gif&quot; lazyload&gt;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;img src=&quot;/2.jpg&quot; srcset=&quot;/img/loading.gif&quot; lazyload&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p>而typora中我此时已经改成仅包含文件名，不包含路径。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![](1.jpg)</span><br><span class="line"></span><br><span class="line">![](2.jpg)</span><br></pre></td></tr></table></figure>

<p>于是我尝试把public&#x2F;img中的图片路径补充完整。怎么补充呢？首先要找到html的位置以及图片的位置。public文件夹就是由md文档生成的。查找一番后发现img中才存在图片。</p>
<p>由此继续发现开启post_asset_folder之后，只是在hexo n xxx新文章的时候同时创建一个同名的文件夹，图片放文件夹里，但是hexo g的时候这个同名文件夹里的图片并不会在public的html文件夹中生成相同图片，依旧只有public&#x2F;img中有图片：</p>
<p><img src="https://pic2.zhimg.com/80/v2-9b7dae28a33b78dd88d26cea1aa14111_720w.webp"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<p>那么我们可以知道public和resource文件夹下的对应关系。</p>
<p><img src="https://pic4.zhimg.com/80/v2-c01d7c3f0d2699983acfe1aada7e6207_720w.webp"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<p>搞清楚之后，我们的思路就是：html中图片路径一定是相对路径而不能写绝对路径，因为最终发布到GitHub上去的只有public文件夹的内容，这个相对路径一定是基于public文件夹内的路径。</p>
<p>因此我重新把文章配图复制到img下，新建一个本文的文件夹存放配图。以我的路径示例，在typora中补充完整图片路径：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![](/img/articles/hexo+github/1.jpg)</span><br><span class="line"></span><br><span class="line">![](/img/articles/hexo+github/2.jpg)</span><br></pre></td></tr></table></figure>

<p>再次hexo clean、hexo g、hexo s之后查看，果然图片出现了。发布到GitHub Pages同样没有问题。问题解决。</p>
<p>使用此解决方法，需要注意：</p>
<p>每次发布文章，图片需要放在&#x2F;resource&#x2F;img下，这样才能保证每次hexo g都能自动同步到public文件夹中。</p>
<p>typora中写相对路径。</p>
<p>typora中无法解析图片显示出来，但是在网页上可以显示出来。</p>
<p>我的方法仅提供一个思路，每个人具体的问题可能有些不同，也不能盲从，还是需要结合实际来解决。</p>
<h3 id="hexo-d后进入页面显示404"><a href="#hexo-d后进入页面显示404" class="headerlink" title="hexo d后进入页面显示404"></a>hexo d后进入页面显示404</h3><p>绑定好新域名后，再次hexo d上传文章发现页面404了。后来查看仓库里的CNAME文件发现不见了，而且自定义域名失效。</p>
<p>查了一下，发现需要手动在resource下添加一个不带后缀的文件CNAME，全大写。里面写自定义的域名。再重新hexo g -d即可。</p>
<h2 id="hexo-d-报错"><a href="#hexo-d-报错" class="headerlink" title="#hexo d 报错"></a>#<code>hexo d</code> 报错</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure>

<ul>
<li>原因</li>
</ul>
<p>–</p>
<p>备份Hexo的时候缺少 <code>hexo-deployer</code> 插件</p>
<ul>
<li>解决办法</li>
</ul>
<hr>
<p>在Hexo根目录下执行一下命令即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Typedown – 免费轻量级 Markdown 编辑器</title>
    <url>/2023/08/25/Typedown%20%E2%80%93%20%E5%85%8D%E8%B4%B9%E8%BD%BB%E9%87%8F%E7%BA%A7%20Markdown%20%E7%BC%96%E8%BE%91%E5%99%A8/</url>
    <content><![CDATA[<h1 id="Typedown-–-免费轻量级-Markdown-编辑器"><a href="#Typedown-–-免费轻量级-Markdown-编辑器" class="headerlink" title="# Typedown – 免费轻量级 Markdown 编辑器"></a># Typedown – 免费轻量级 Markdown 编辑器</h1><p> <a href="https://apps.microsoft.com/detail/9p8tcw4h2hb4?q=banana&hl=zh-cn&gl=CN">Typedown - Windows官方下载 | 微软应用商店 | Microsoft Store</a></p>
<p><a href="https://github.com/byxiaozhi/Typedown">https://github.com/byxiaozhi/Typedown</a></p>
<p>Typedown 是一款专为 Windows 11 平台设计的轻量级 Markdown 编辑器。无预览窗口、无各种标记、所见即所得，支持 LaTeX 公式编辑、流程图绘制和支持多种语言代码高亮。借助 WinUI 框架，它为用户提供了与操作系统完美匹配的界面和高效的编辑体验。无论您是撰写技术文档、学术论文还是博客文章，Typedown 都将是您的得力助手！</p>
<h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><ul>
<li>文件</li>
</ul>
<p><img src="https://tu.liubei.space/file/c1d7454fd4b6ffc760624.png"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<ul>
<li>编辑</li>
</ul>
<p><img src="https://tu.liubei.space/file/75e2500d3b746578a85d6.png"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<ul>
<li>段落</li>
</ul>
<p><img src="https://tu.liubei.space/file/c3a3602ed96b542b1ba37.png"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<ul>
<li>格式</li>
</ul>
<p><img src="https://tu.liubei.space/file/d032dc5fbfe3d22ceed1d.png"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>Typedown</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>免费随机图片api接口</title>
    <url>/2023/08/25/%E5%85%8D%E8%B4%B9%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">搏天：https://api.btstu.cn/</span><br><span class="line">樱道：https://api.r10086.com/</span><br><span class="line">樱花：https://www.dmoe.cc/</span><br><span class="line">保罗：https://api.paugram.com/</span><br><span class="line">EEE.DOG：https://api.yimian.xyz/</span><br><span class="line">东方Project：https://img.paulzzh.tech/</span><br><span class="line">likepoems随机图：https://api.likepoems.com/</span><br><span class="line">Unsplash Image：https://source.unsplash.com/</span><br><span class="line">缙哥哥博客: https://api.dujin.org/pic/yuanshen/</span><br><span class="line">LoliAPI：https://www.loliapi.com/</span><br><span class="line">栗次元：https://t.alcy.cc/</span><br><span class="line">————————————————</span><br></pre></td></tr></table></figure>

<p>又是美好的一天</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>api</tag>
      </tags>
  </entry>
  <entry>
    <title>Demo模板</title>
    <url>/2023/08/25/%E6%B5%8B%E8%AF%95demo/</url>
    <content><![CDATA[<p>又是美好的一天</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>趣闻</tag>
      </tags>
  </entry>
</search>
